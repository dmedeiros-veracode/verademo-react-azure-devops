name:  'Promote Release Candidate Scan'

#$(TeamProject)_$(SourceBranchName)_$(Build.BuildId)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

variables:
- name: applicationName
  value: verademo-azure
- name: vid
  value: testid
- name: vkey
  value: testkey
- name: wrapper_version
  value: 23.1.10.5
steps:
  - script: java --version
    continueOnError: true
    displayName: Report Java Version installed
  - script: gzip --version
    continueOnError: true
  - script: 7z --version
    continueOnError: true
    
  - script: ls -la $(Build.SourcesDirectory)
  - script: ls -la $(Build.ArtifactStagingDirectory)
  - script: ls -la $(Build.BinariesDirectory)

  - script: |
      echo ${{ variables.wrapper_version }} # outputs initialValue
      echo $(wrapper_version)
    displayName: First variable pass

 # - bash: echo "##vso[task.setvariable variable=one]secondValue"
 #   displayName: Set new variable value

 # - script: |
 #     echo ${{ variables.one }} # outputs initialValue
 #     echo $(one) # outputs secondValue
 #   displayName: Second variable pass
  - script: |
      echo ##vso[task.setvariable variable=wrapper_version;isOutput=true]23.1.10.5

  - script: |
      Write-Output "Downloading the latest version of the Veracode Java API"
          $versionstring = curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/maven-metadata.xml | Out-String -Stream | Select-String -Pattern 'latest';
          $wrapper_version = $versionstring -replace '\s','' -replace '<latest>','' -replace '</latest>','';
          echo $wrapper_version
    displayName: Team
    enabled: false
    
  - script: |
      curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/$WRAPPER_VERSION/vosp-api-wrappers-java-$WRAPPER_VERSION-dist.zip -o $(Build.ArtifactStagingDirectory)/dist.zip
    displayName: Downloading the latest version of the Veracode Java API
    enabled: true     
  
  - script: ls -la
    displayName: Show Contents
  
  - script: |
      7z e dist.zip -y
    displayName: Uncompressiong File  
    enabled: true
    
  - script: ls -la $(Build.SourcesDirectory)
  - script: ls -la $(Build.ArtifactStagingDirectory)
  - script: ls -la $(Build.BinariesDirectory)
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(Build.ArtifactStagingDirectory)/*.zip'
      destinationFolder: .
      cleanDestinationFolder: false
      overwriteExistingFiles: false

  - script: ls -la $(Build.SourcesDirectory)
  - script: ls -la $(Build.ArtifactStagingDirectory)
  - script: ls -la $(Build.BinariesDirectory)

  #- script: |
  #     java -jar VeracodeJavaAPI.jar -vid $(vid) -vkey $(vkey) -action getapplist | tee appidlist.txt
  #  displayName: Pulling the Sandbox ID List