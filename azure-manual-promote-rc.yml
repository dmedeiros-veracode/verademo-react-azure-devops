name:  'Promote Release Candidate Scan'

#$(TeamProject)_$(SourceBranchName)_$(Build.BuildId)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

variables:
- name: applicationName
  value: verademo-azure
- name: vid
  value: testid
- name: vkey
  value: testkey
steps:
  - script: java --version
    continueOnError: true
    displayName: Report Java Version installed
    
  - script: ls -la $(Build.SourcesDirectory)
  - script: ls -la $(Build.ArtifactStagingDirectory)
  - script: ls -la $(Build.BinariesDirectory)

  - pwsh: |
      Write-Output "Downloading the latest version of the Veracode Java API"
          $versionstring = curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/maven-metadata.xml | Out-String -Stream | Select-String -Pattern 'latest';
          $wrapper_version = $versionstring -replace '\s','' -replace '<latest>','' -replace '</latest>','';
          ##vso[task.setvariable variable=wrapper_version;isOutput=true] $wrapper_version;
    displayName: Get meta-data on the latest version of the Veracode Java API
    enabled: true
    
  - script: |
      echo $WRAPPER_VERSION
      curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/$WRAPPER_VERSION/vosp-api-wrappers-java-$WRAPPER_VERSION-dist.zip -o $(Build.ArtifactStagingDirectory)/dist.zip
    displayName: Downloading the latest version of the Veracode Java API
    enabled: true     
  
  - script: ls -la $(Build.ArtifactStagingDirectory)
    displayName: Show Artifact Directory Content

  - script: |
      7z e $(Build.ArtifactStagingDirectory)/dist.zip -o$(Build.ArtifactStagingDirectory)/extract/ -y
    displayName: Uncompressiong File  
    enabled: true

  - script: ls -la $(Build.ArtifactStagingDirectory)/extract/
    displayName: Show Extract Directory Content
    
  - script: ls -la $(Build.SourcesDirectory)
  - script: ls -la $(Build.ArtifactStagingDirectory)
  - script: ls -la $(Build.BinariesDirectory)
  - script: ls -la $(Build.SourcesDirectory)
  - script: ls -la $(Build.ArtifactStagingDirectory)
  - script: ls -la $(Build.BinariesDirectory)

  #- script: |
  #     java -jar VeracodeJavaAPI.jar -vid $(vid) -vkey $(vkey) -action getapplist | tee appidlist.txt
  #  displayName: Pulling the Sandbox ID List
  - pwsh: |
      $(Build.ArtifactStagingDirectory)/extract/java --version
    #-jar VeracodeJavaAPI.jar -vid $(vid) -vkey $(vkey) -action getapplist | tee appidlist.txt
    #    $veracodeappid = (Get-Content .\appidlist.txt | Select-String $appname).Line.Split('"')[1]
    #    Write-Output "Pulling the Sandbox ID List"
  

  #- pwsh: |
  #    java -jar VeracodeJavaAPI.jar -vid $(vid) -vkey $(vkey) -action getsandboxlist -appid $veracodeappid | tee sandboxlist.txt
  #        $veracodesandboxid = (Get-Content .\sandboxlist.txt | Select-String -Pattern "sandbox_id=").Line.Split('"')[9] | Select-Object -Last 1
  #        Write-Output "Pulling the Build ID List"