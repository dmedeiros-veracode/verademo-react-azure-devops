name:  'Promote Release Candidate Scan'

#$(TeamProject)_$(SourceBranchName)_$(Build.BuildId)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

parameters:
  - name: vid
    displayName: veracode-api-id
    default: ""
    type: string
  - name: vkey
    displayName: veracode-api-key
    default: ""
    type: string
  - name: appName
    default: "verademo-react"
    type: string
  - name: sandboxName
    default: "Release Candidate"
    type: string

steps:
  - script: java --version
    continueOnError: true
    displayName: Report Java Version installed

  - pwsh: |
      $versionstring = curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/maven-metadata.xml | Out-String -Stream | Select-String -Pattern 'latest';
      $wrapper_version = $versionstring -replace '\s','' -replace '<latest>','' -replace '</latest>','';
      echo $wrapper_version
      curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/$WRAPPER_VERSION/vosp-api-wrappers-java-$WRAPPER_VERSION-dist.zip -o $(Build.ArtifactStagingDirectory)/dist.zip
      7z e $(Build.ArtifactStagingDirectory)/dist.zip -o$(Build.ArtifactStagingDirectory)/extract/ -y
    displayName: Downloading the latest version of the Veracode Java API
    enabled: true
 
  - script: ls -la $(Build.ArtifactStagingDirectory)
    displayName: Show Artifact Directory Content

  - script: |
      ls -la $(Build.ArtifactStagingDirectory)/extract/
    displayName: Show Extract Directory Content
    enabled: true
    
  - script: |
      java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -version
    displayName: Veracode Wrapper Version
    enabled: false
      
  - script: |
      java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -vid ${{parameters.vid}} -vkey ${{parameters.vkey}} -action getapplist 
    displayName: Display the Application List
    enabled: true
 
  - pwsh: |
      java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -vid ${{parameters.vid}} -vkey ${{parameters.vkey}} -action getapplist | tee appidlist.txt
      $veracodeappid = (Get-Content .\appidlist.txt | Select-String "${{parameters.appName}}").Line.Split('"')[1]
      echo $veracodeappid

      java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -vid ${{parameters.vid}} -vkey ${{parameters.vkey}} -action getsandboxlist -appid $veracodeappid | tee sandboxlist.txt
          $veracodesandbox_name = (Get-Content .\sandboxlist.txt | Select-String "${{parameters.sandboxName}}").Line.Split('"')[1]
          # $veracodesandboxid = (Get-Content .\sandboxlist.txt | Select-String -Pattern "sandbox_id=").Line.Split('"')[9] | Select-Object -Last 1
      echo $veracodesandbox_name
    displayName: "Pulling the Build ID List"
    enabled: false
   
  - pwsh: |
      java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -vid ${{parameters.vid}} -vkey ${{parameters.vkey}} -action getapplist | tee applicationlist.xml
      ls -la
      $appName = "verademo-net-github-actions"
      [xml]$Xml = Get-Content .\applicationlist.xml
      $SnippetNamespace = @{ns = "https://analysiscenter.veracode.com/schema/2.0/applist"}
      # ${{parameters.appName}}
      $ApplicationId = Select-Xml -Xml $Xml -Namespace $SnippetNamespace -XPath "//ns:app[@app_name='${appName}']" | ForEach-Object {$_.Node.app_id}
      Write-Host $ApplicationId

      # Get Application Sanbox List
      java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -vid ${{parameters.vid}} -vkey ${{parameters.vkey}} -action getsandboxlist -appid $ApplicationId | tee sandboxlist.xml
      ls -la
      [xml]$Xml = Get-Content .\sandboxlist.xml
      $SnippetNamespace = @{ns = "https://analysiscenter.veracode.com/schema/4.0/sandboxlist"}
      # ${{parameters.sandboxName}}
      $SandboxId = Select-Xml -Xml $Xml -Namespace $SnippetNamespace -XPath "//ns:sandbox[@sandbox_name='${{parameters.sandboxName}}']" | ForEach-Object {$_.Node.sandbox_id}

      # Promote Scan
      java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -vid ${{parameters.vid}} -vkey ${{parameters.vkey}} -action GetBuildList -appid $ApplicationId -sandboxid $SandboxId | tee buildlist.xml
      ls -la
      [xml]$Xml = Get-Content .\buildlist.xml
      $SnippetNamespace = @{ns = "https://analysiscenter.veracode.com/schema/2.0/buildlist"}
      $Build = Select-Xml -Xml $Xml -Namespace $SnippetNamespace -XPath "//ns:build[last()]"

      $BuildId =  $Build.Node.build_id
      Write-Host $BuildId
      Write-Host $Build.Node.version

      java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -vid ${{parameters.vid}} -vkey ${{parameters.vkey}} -action GetBuildInfo -appid $ApplicationId -sandboxid $SandboxId -buildid $BuildId | tee buildinfo.xml
      ls -la
      [xml]$Xml = Get-Content .\buildinfo.xml
      $SnippetNamespace = @{ns = "https://analysiscenter.veracode.com/schema/4.0/buildinfo"}
      $element = Select-Xml -Xml $Xml -Namespace $SnippetNamespace -XPath "//ns:build"
      Write-Host $element.Node.results_ready
      $results_ready = $element.Node.results_ready
      
      #java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -vid ${{parameters.vid}} -vkey ${{parameters.vkey}} -action passfail -appname $"${{parameters.appName}}" -sandboxid $veracodesandboxid
     
      # echo $veracodebuildid
      
      echo "##vso[task.setvariable variable=resultsReady]this is the same job"

      #java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -vid ${{parameters.vid}} -vkey ${{parameters.vkey}} -action passfail -appname $"${{parameters.appName}}" -sandboxid $veracodesandboxid
     
      #java -jar $(Build.ArtifactStagingDirectory)/extract/VeracodeJavaAPI.jar -vid ${{parameters.vid}} -vkey ${{parameters.vkey}} -action PromoteSandbox -buildid $veracodebuildid 
    displayName: Test
    enabled: true

  - pwsh: |
      Write-Host 'Hello World: $(resultsReady)'
